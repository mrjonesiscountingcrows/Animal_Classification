from PIL import Imageimport osimport numpyimport jsondata_folder = "data/animals"def retrieveMaxAndMinSize():    image_sizes = {}    for folder in os.listdir(data_folder):        folder_name = folder        for image in os.listdir(data_folder + "/" + folder_name):            image_loc = data_folder + "/" + folder_name + "/" + image            image_sizes[image] = Image.open(image_loc, 'r').size    max_image_size = max(image_sizes, key=image_sizes.get)    min_image_size = min(image_sizes, key=image_sizes.get)    print("max_image", max_image_size,          "dimensions:", image_sizes.get(max_image_size))    print("min_image", min_image_size,          "dimensions:", image_sizes.get(min_image_size))def retrieveCount():    countDict = {}    for folder in os.listdir(data_folder):        folder_name = folder        image_count = 0        for image in os.listdir(data_folder + "/" + folder_name):            image_count = image_count + 1        countDict[folder_name] = image_count    if os.path.exists("count.json"):        os.remove("count.json")    with open('count.json', 'w') as f:        json.dump(countDict, f)def retrieveMetadata():    metadata = []    total_image_count = 0    for folder in os.listdir(data_folder):        folder_name = folder        for image in os.listdir(data_folder + "/" + folder_name):            total_image_count = total_image_count + 1            imageDict = {}            imageDict["unique_id"] = total_image_count            imageDict["image_name"] = image            imageDict["type"] = folder_name            metadata.append(imageDict)    if os.path.exists("metadata.json"):        os.remove("metadata.json")    for i in range(len(metadata)):        myDict = metadata[i]        with open('metadata.json', 'a') as f:            json.dump(myDict, f)            f.write(os.linesep)